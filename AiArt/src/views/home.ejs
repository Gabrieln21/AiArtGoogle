<!DOCTYPE html>
<html lang="en" class="h-full">
<head>
    <meta charset="UTF-8" />
    <title>Irene Carvajal – Art & Experiments</title>

    <!-- Tailwind CDN -->
    <script src="https://cdn.tailwindcss.com"></script>

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&family=Lora:ital@0;1&display=swap" rel="stylesheet">
    <style>
        body { font-family: Inter, sans-serif; }

        .masonry-grid {
            column-count: 4;
            column-gap: 20px;
            column-fill: balance;
        }
        @media (max-width: 1280px) {
            .masonry-grid { column-count: 3; }
        }
        @media (max-width: 1024px) {
            .masonry-grid { column-count: 2; }
        }
        @media (max-width: 640px) {
            .masonry-grid { column-count: 1; }
        }

        .masonry-item {
            break-inside: avoid;
            margin-bottom: 20px;
            display: inline-block;
            width: 100%;
            background-color: #f3f4f6;
            /* Prevent layout shifts during hover */
            contain: layout style;
            transform: translateZ(0);
        }

        .gallery-img {
            will-change: transform, opacity;
            backface-visibility: hidden;
            transform: translateZ(0);
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            filter: brightness(1) contrast(1);
        }

        .gallery-img:hover {
            transform: translateY(-2px) scale(1.015);
            filter: brightness(1.05) contrast(1.1);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12), 0 2px 8px rgba(0, 0, 0, 0.08);
        }
    </style>
</head>

<body class="h-full bg-white text-gray-800 antialiased">

<main class="min-h-screen pt-10 px-4">
    <section class="px-4 space-y-4">
        <h1 class="text-2xl font-semibold text-gray-900 mb-2">Participate in the art!</h1>
        <h3 class="text-lg text-gray-600 mb-8">Explain the piece..</h3>

        <form id="genForm" class="w-full space-y-4" enctype="multipart/form-data">
            <input id="promptInput" name="prompt" type="text" placeholder="Main image description…"
                   class="w-full border border-gray-300 px-4 py-3 rounded-md text-base focus:border-gray-500 focus:ring-0 transition-colors" />
            <input id="lastSearchInput" name="lastSearch" type="text" placeholder="Your last Google search"
                   class="w-full border border-gray-300 px-4 py-3 rounded-md text-base focus:border-gray-500 focus:ring-0 transition-colors" />
            <button id="genBtn" type="submit"
                    class="w-full px-4 py-3 bg-gray-900 text-white rounded-md hover:bg-gray-800 text-base transition-colors">
                Generate
            </button>
        </form>

        <p id="status" class="text-sm text-gray-500 mt-2 hidden"></p>
    </section>

    <section id="gallery" class="masonry-grid mt-12 px-4">
        <% (images || []).forEach(img => { %>
            <div class="aspect-[4/3] rounded overflow-hidden masonry-item">
                <img
                        loading="lazy"
                        src="<%= img.publicUrl %>"
                        alt="<%= img.prompt %>"
                        data-id="<%= img.id %>"
                        data-url="<%= img.publicUrl %>"
                        data-prompt="<%= img.prompt %>"
                        onclick="openModal(this)"
                        class="gallery-img w-full h-full object-cover rounded cursor-pointer opacity-0 transition-opacity duration-500 ease-in-out"
                />
            </div>
        <% }) %>
    </section>
</main>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('.gallery-img').forEach(img => {
            if (img.complete) {
                img.classList.remove('opacity-0');
            } else {
                img.addEventListener('load', () => img.classList.remove('opacity-0'));
            }
        });
    });

    const form = document.getElementById('genForm');
    const input = document.getElementById('promptInput');
    const status = document.getElementById('status');
    const gallery = document.getElementById('gallery');

    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        const userInput = input.value.trim();
        const lastSearch = document.getElementById('lastSearchInput').value.trim();
        if (!userInput) return;

        status.textContent = 'Creating… ⏳';
        status.classList.remove('hidden');

        try {
            const body = new FormData();
            body.append('prompt', userInput);
            body.append('lastSearch', lastSearch);

            const res = await fetch('/api/generate', { method: 'POST', body });
            if (!res.ok) {
                const errorData = await res.text();
                status.textContent = 'Error: ' + errorData;
                status.className = 'text-sm text-red-600 mt-2';
                return;
            }
            const data = await res.json();

            const masonryItem = document.createElement('div');
            masonryItem.className = 'aspect-[4/3] rounded overflow-hidden masonry-item';

            const img = document.createElement('img');
            img.src = data.localPath || data.url;
            img.alt = data.prompt;
            img.dataset.url = img.src;
            img.dataset.prompt = data.prompt;
            img.onclick = () => openModal(img);
            img.className = 'gallery-img w-full h-full object-cover rounded cursor-pointer opacity-0 transition-opacity duration-500 ease-in-out';

            img.onload = () => img.classList.remove('opacity-0');

            masonryItem.appendChild(img);
            gallery.insertBefore(masonryItem, gallery.firstChild);

            form.reset();
            status.textContent = 'Added!';
            setTimeout(() => status.classList.add('hidden'), 1500);
        } catch (err) {
            console.error(err);
            status.textContent = 'Error: ' + err.message;
            status.className = 'text-sm text-red-600 mt-2';
        }
    });
</script>

<div id="imageModal" class="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50 hidden">
    <div class="relative w-full max-w-5xl p-0 m-4 rounded-xl shadow-2xl bg-transparent overflow-hidden">
        <button id="closeModal" class="absolute top-4 right-4 text-white hover:text-gray-300 text-2xl font-bold z-10">&times;</button>

        <!-- Image Full-Edge, No Border -->
        <img
                id="modalImage"
                src=""
                alt=""
                class="block w-full max-h-[80vh] object-contain opacity-0 transition-opacity duration-300 bg-black"
                onload="this.style.opacity=1"
        />

        <!-- Prompt and Buttons -->
        <div class="bg-white p-6">
            <p id="modalPrompt" class="text-base leading-relaxed text-gray-700 italic"></p>
            <div class="mt-4 flex gap-4">
                <a id="downloadBtn" href="#" download
                   class="inline-block px-4 py-2 text-sm font-medium text-white bg-gray-800 rounded hover:bg-gray-700 shadow">⬇ Download</a>
                <button id="deleteBtn"
                        class="px-4 py-2 text-sm font-medium text-white bg-red-600 rounded hover:bg-red-500 shadow">
                    🗑 Delete
                </button>
            </div>
        </div>
    </div>
</div>




<script>
    let currentImageId = null;
    let currentImgElement = null;

    function openModal(img) {
        const modal = document.getElementById("imageModal");
        const modalImage = document.getElementById("modalImage");
        const modalPrompt = document.getElementById("modalPrompt");
        const downloadBtn = document.getElementById("downloadBtn");

        modalImage.src = img.dataset.url;
        modalPrompt.textContent = img.dataset.prompt;
        downloadBtn.href = img.dataset.url;

        currentImageId = img.dataset.id;
        currentImgElement = img.closest(".masonry-item");

        modal.classList.remove("hidden");
        document.body.style.overflow = "hidden";
    }

    function closeModal() {
        document.getElementById("imageModal").classList.add("hidden");
        document.body.style.overflow = "auto";
        currentImageId = null;
        currentImgElement = null;
    }

    document.getElementById("closeModal").addEventListener("click", closeModal);
    document.getElementById("imageModal").addEventListener("click", (e) => {
        if (e.target.id === "imageModal") closeModal();
    });
    document.addEventListener("keydown", (e) => {
        if (e.key === "Escape") closeModal();
    });

    document.getElementById("deleteBtn").addEventListener("click", async () => {
        if (!currentImageId) return;

        if (confirm("Are you sure you want to delete this image?")) {
            const res = await fetch(`/api/images/${currentImageId}`, {
                method: "DELETE"
            });

            if (res.ok) {
                currentImgElement?.remove();
                closeModal();
            } else {
                alert("Failed to delete image.");
            }
        }
    });
</script>

<script src="https://kit.fontawesome.com/4ad52d1665.js" crossorigin="anonymous"></script>
</body>
</html>
